<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
 
 
 <context:component-scan base-package="com.haina.beluga">    
 </context:component-scan> 

<bean id="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
     <property name="driverClassName">
     <value>com.mysql.jdbc.Driver</value>
     </property>
     <property name="url">
     <value>jdbc:mysql://localhost:3306/haina_beluga?useUnicode=true&amp;characterEncoding=utf8</value>
     </property>
     <property name="username">
     <value>root</value>
     </property>
     <property name="password">
     <value>root</value>
     </property>
   </bean>

<!--Hibernate��l��,����������sessionFactroy��ʼ-->

<bean id="sessionFactory"
			class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
			
	<property name="dataSource">
		<ref local="dataSource" />
	</property>
	<property name="mappingDirectoryLocations">
		<list>
		<value>classpath:hbmxml/com/haina/beluga/</value>
		<!-- add your application hbm.xml -->
		</list>
	</property>
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.dialect">
				org.hibernate.dialect.MySQLDialect 
			</prop>
			<prop key="hibernate.show_sql">
				false
			</prop>
			 <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
        		<prop key="hibernate.cache.use_query_cache">true</prop>
		</props>
	</property> 
	
</bean>
    

</beans>
   
   

   
